import { N as PasskeyLinkHookOptions, Q as PasskeyHookResult, T as PasskeyLoginHookOptions } from './predicates-343bcbf5.js';
export { o as CreateEthereumEmbeddedWalletOpts, C as CreateOrRecoverEmbeddedWalletProps, q as CreateSolanaEmbeddedWalletOpts, t as CustomAuthFlowState, w as EmbeddedSolanaWalletActions, i as EmbeddedSolanaWalletState, x as EmbeddedSolanaWalletStatus, m as EmbeddedWallet, u as EmbeddedWalletActions, h as EmbeddedWalletState, v as EmbeddedWalletStatus, n as LinkedAccountWithMetadata, M as MfaConfig, k as OAuthFlowState, p as RecoverEthereumEmbeddedWalletOpts, r as RecoverSolanaEmbeddedWalletOpts, R as RecoveryFlowState, s as SetRecoveryProps, U as User, J as hasError, y as isConnected, B as isConnecting, I as isCreating, D as isDisconnected, H as isNotCreated, z as isReconnecting, K as needsRecovery } from './predicates-343bcbf5.js';
import '@privy-io/js-sdk-core';
import '@privy-io/public-api';

declare const useLinkWithPasskey: (opts?: PasskeyLinkHookOptions) => PasskeyHookResult<"link">;

declare const useLoginWithPasskey: (opts?: PasskeyLoginHookOptions) => PasskeyHookResult<"login">;

export { useLinkWithPasskey, useLoginWithPasskey };
