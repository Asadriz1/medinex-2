import{x as g}from"./chunk-2A53XW2W.js";import{F as y,d as s}from"./chunk-2HSCQXHK.js";import c,{createContext as S,useContext as d,useEffect as W,useState as x}from"react";import{getUserSmartWallet as C,PrivyClientError as _}from"@privy-io/js-sdk-core";import{createPublicClient as U,http as A}from"viem";import{getJsonRpcEndpointFromChain as $,getUserSmartWallet as I,PrivyClientError as h}from"@privy-io/js-sdk-core";import{signerToSmartAccountClient as N}from"@privy-io/js-sdk-core/smart-wallets";var P=o=>s(void 0,[o],function*({chain:t,privyAppId:n,user:a,embeddedWallet:e,smartWalletsConfig:r}){var f,w;if(!(r!=null&&r.enabled)||(e==null?void 0:e.status)!=="connected")return;let i=yield e.getProvider(),l=r==null?void 0:r.configured_networks.find(R=>R.chain_id===`eip155:${t.id}`);if(!l)throw new h({code:"chain_not_supported",error:`The chain ${t.name} (eip155:${t.id}) must be configured in the smart wallet configuration in your dashboard`});let v=(w=(f=I(a))==null?void 0:f.smart_wallet_type)!=null?w:r.smart_wallet_type,m=$(t,{rpcUrls:[]},n),p=U({chain:t,transport:A(m)}),u=yield N({owner:i,smartWalletType:v,chain:t,publicClient:p,paymasterContext:l.paymaster_context,bundlerUrl:l.bundler_url,paymasterUrl:l.paymaster_url});if(!u)throw new h({code:"smart_wallet_client_error",error:`Failed to create smart wallet client for chain ${t.name} (eip155:${t.id})`});return u});var L=({children:t})=>c.createElement(J,null,c.createElement(M,null,c.createElement(O,null,t))),b=S({config:void 0}),k=()=>{let{config:t}=d(b);return{config:t}},E=S({smartWalletClient:void 0}),F=()=>{let{smartWalletClient:t}=d(E);return{smartWalletClient:t}},T=S({client:void 0}),j=()=>{let{client:t}=d(T);return{client:t}},J=({children:t})=>{let[n,a]=x(void 0),e=g();return W(()=>{!n&&e&&(()=>s(void 0,null,function*(){try{if(!e){console.warn("No client found");return}let o=yield e.app.getSmartWalletConfig();a(o)}catch(o){console.warn("Error generating smart wallet config: ",o)}}))()},[e,n]),c.createElement(b.Provider,{value:{config:n}},t)},M=({children:t})=>{let{config:n}=k(),{client:a,wallet:e,user:r}=d(y),[o,i]=x();return W(()=>{(()=>s(void 0,null,function*(){if(!r&&o&&i(void 0),!(n!=null&&n.enabled)||!r||e.status!=="connected"||r&&o&&e.status==="connected")return;let m=a.embeddedWallet.chains.find(u=>n.configured_networks.map(f=>f.chain_id).includes(`eip155:${u.id}`));if(!m)throw new _({error:"Could not find smart wallets chain configurations for any Privy client configured chains. Please configure smart wallets for your chains in the Privy dashboard.",code:"chain_not_supported"});let p=yield P({chain:m,privyAppId:a.app.appId,user:r,embeddedWallet:e,smartWalletsConfig:n});if(!p)throw new _({error:"Could not create smart wallet client",code:"smart_wallet_client_error"});i(p)}))()},[!!(n!=null&&n.enabled),!!a,!!r,e.status]),c.createElement(E.Provider,{value:{smartWalletClient:o}},t)},O=({children:t})=>{let{client:n,user:a}=d(y),{smartWalletClient:e}=F(),{config:r}=k();return W(()=>{(()=>s(void 0,null,function*(){if(!(!e||!a||C(a)||!(r!=null&&r.enabled)))try{let{message:i}=yield n.auth.smartWallet.init({address:e.account.address,chainId:`eip155:${e.chain.id}`}),l=yield e.signMessage({message:i});yield n.auth.smartWallet.link(i,l,r.smart_wallet_type)}catch(i){console.error("Error creating smart wallet:",i)}}))()},[!!e,!!a,!!C(a),r]),c.createElement(T.Provider,{value:{client:C(a)?e:void 0}},t)};export{L as SmartWalletsProvider,j as useSmartWallets};
